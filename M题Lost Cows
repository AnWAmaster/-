原题链接
https://vjudge.net/contest/441568#problem/M


题目大意：给出N个有不同编号的动物，从左到右编号为乱序的排列成一排，
         给出每个位置左边有几个编号比该位置的动物编号小的动物的个数，我先设作a[i]。
         求每个位置上的动物的编号
     
思路：
首先想下遍历编号数组的方向，这里要注意题意，是“与每个位置左边”的进行比较
如果从左到右的话，先遍历到的数不能马上得到答案，因为右边的数的排名还未得知
但是思考下如果从右往左遍历的话，当前动物的编号实际上就是剩余的没被使用的升序编号的第a[i]+1个
暴力解决这道题的思路就已经出现了

但是看别人的题解，果然用了高级一点的方法：线段树
如区间left,right,线段树维护编号left~right中有多少个编号没被用掉
利用线段树logn的查找，我们就能快速找到未使用的编号的第a[i]+1是什么编号
这样就能将时间复杂度从O(n^2)降到O(nlogn)

于是又get了一个线段树的用法
一些小细节见代码注释

AC代码
#include<iostream>
using namespace std;
#define maxn 80001*4
struct Node{
	int l,r;
	int num;//区间未被使用的编号的个数
}n[maxn];

int a[maxn];
int ans[maxn];

void pushup(int cur){
	n[cur].num=n[cur*2].num+n[cur*2+1].num;
}

void build(int cur,int left,int right){
	n[cur].l=left,n[cur].r=right;
	if(left==right){
		n[cur].num=1;
		return;
	}
	int mid=(left+right)/2;
	build(cur*2,left,mid);
	build(cur*2+1,mid+1,right);
	pushup(cur); 
}

void query(int cur,int rank,int idx){//三个参数，当前树节点编号，当前取的位置在前缀中的排名，当前要求的答案数组元素的下标
	n[cur].num--;//注意这句话和下面那个注释的相同语句不能任取，
               //如果用下面那句，会使区间值的修改少了，使答案出现问题
	if(n[cur].l==n[cur].r){
		ans[idx]=n[cur].l;
		return;
	}
	//n[cur].num--;
	if(n[cur*2].num>=rank){
		query(cur*2,rank,idx);
	}else{
		query(cur*2+1,rank-n[cur*2].num,idx);//这里注意要做一下减法,因为使抛掉了左边那部分，自己的排名也应该抛掉左边部分的排名
	}
} 

int main(){
	int N;
	cin>>N;
	build(1,1,N);
	for(int i=2;i<=N;i++){
		cin>>a[i];
	}
	for(int i=N;i>=1;i--){
		query(1,a[i]+1,i);//这里注意a[i]+1啊，a[i]+1才是当前位置在的前缀中的排名
	}
	for(int i=1;i<=N;i++){
		cout<<ans[i]<<endl;
	}
}

